package com.kira.malware.fragments;

import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.provider.Settings;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;

import com.kira.malware.controllers.ImplicitIntentController;
import com.kira.malware.controllers.LogController;
import com.kira.malware.R;
import com.kira.malware.models.LogModel;

public class TapHijackingFragment extends Fragment {

    private Context context;
    private LogController log;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        return inflater.inflate(R.layout.fragment_tap_hijacking, container, false);
    }

    @Override
    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        this.context = view.getContext();
        this.log = new LogController(view);
        this.log.appendText("Tip #1: Test if other apps can detect an overlay");
        this.log.appendText("");
        this.log.appendText("Tip #2: Detect an overlay by checking \"MotionEvent.FLAG_WINDOW_IS_OBSCURED\" and \"MotionEvent.FLAG_WINDOW_IS_PARTIALLY_OBSCURED\" flags");

        view.findViewById(R.id.button_tap_hijacking_overlay_create).setOnClickListener(v -> {
            if (!Settings.canDrawOverlays(this.context)) {
                this.context.startActivity(new Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION, Uri.parse("package:com.kira.malware")));
            } else {
                this.log.viewStatusMessage(ImplicitIntentController.startService(this.context, "", "com.kira.malware.controllers.OverlayController", "", "", 0, new Bundle(), ""));
            }
        });

        view.findViewById(R.id.button_tap_hijacking_overlay_detect).setOnTouchListener((v, motionEvent) -> {
            LogModel status = new LogModel();
            int flags = motionEvent.getFlags();
            if ((flags & MotionEvent.FLAG_WINDOW_IS_OBSCURED) != 0 || (flags & MotionEvent.FLAG_WINDOW_IS_PARTIALLY_OBSCURED) != 0) {
                status.setSuccess(true);
                status.setSuccessMessage("Overlay was detected successfully");
            } else {
                status.setErrorMessage("No overlay was detected");
            }
            this.log.viewStatusMessage(status);
            return false;
        });
    }

}