package com.kira.malware.fragments;

import android.app.Notification;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.content.Context;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.app.NotificationCompat;
import androidx.core.app.NotificationManagerCompat;
import androidx.fragment.app.Fragment;

import com.kira.malware.controllers.ExplicitIntentController;
import com.kira.malware.controllers.FormatController;
import com.kira.malware.controllers.LogController;
import com.kira.malware.models.LogModel;
import com.kira.malware.R;

public class ExplicitIntentFragment extends Fragment {

    private Context context;
    private LogController log;

    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        return inflater.inflate(R.layout.fragment_explicit_intent, container, false);
    }

    private Notification createPushNotification(LogModel status) {
        NotificationChannel channel = new NotificationChannel("Hidden Activity", "Hidden Activity Notification Channel", NotificationManager.IMPORTANCE_DEFAULT);
        NotificationManager manager = this.context.getSystemService(NotificationManager.class);
        manager.createNotificationChannel(channel);
        return new NotificationCompat.Builder(this.context, "Hidden Activity")
                .setContentTitle("Hidden Activity")
                .setContentText("Tap to open!")
                .setSmallIcon(android.R.drawable.stat_notify_more)
                .setAutoCancel(true)
                .setContentIntent(ExplicitIntentController.launchPending(this.context, status)).build(); // NOTE: Set a pending intent.
    }

    @Override
    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        this.context = view.getContext();
        this.log = new LogController(view);
        this.log.appendText("Info: For the purpose of demonstrating explicit intents");

        LogModel status = new LogModel(true, "This is a hidden activity", FormatController.Type.SUCCESS);

        // NOTE: For the purpose of demonstrating explicit intents.
        view.findViewById(R.id.button_explicit_send_push_notification).setOnClickListener(v -> {
            Notification notification = this.createPushNotification(status);
            NotificationManagerCompat.from(this.context).notify(1, notification);
        });

        // NOTE: For the purpose of demonstrating explicit intents.
        view.findViewById(R.id.button_explicit_send_simple_message).setOnClickListener(v -> {
            ExplicitIntentController.launch(this.context, status);
        });
    }

}