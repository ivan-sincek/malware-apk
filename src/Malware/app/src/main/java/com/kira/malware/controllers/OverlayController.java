package com.kira.malware.controllers;

import android.app.Service;
import android.content.Intent;
import android.graphics.PixelFormat;
import android.os.IBinder;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.LinearLayout;

import androidx.annotation.Nullable;

import com.kira.malware.R;
import com.kira.malware.activities.MainActivity;

/**
 * Service for handling an overlaying view.
 */
public class OverlayController extends Service implements View.OnTouchListener, View.OnClickListener {

    private WindowManager wm;
    private LinearLayout layout;
    private WindowManager.LayoutParams layoutParams;
    private int initialX, initialY, newX, newY;
    private static final int ROW_0 = 0, OPEN_BUTTON = 1, CLOSE_BUTTON = 2;

    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override
    public void onCreate() {
        super.onCreate();

        this.wm = (WindowManager) this.getSystemService(WINDOW_SERVICE);
        this.layout = (LinearLayout) ((LayoutInflater) this.getSystemService(LAYOUT_INFLATER_SERVICE)).inflate(R.layout.overlay, null);
        this.layout.setOnTouchListener(this);
        this.layout.setOnClickListener(this);

        this.layoutParams = new WindowManager.LayoutParams(
                WindowManager.LayoutParams.WRAP_CONTENT,
                WindowManager.LayoutParams.WRAP_CONTENT,
                WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY,
                WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL | WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH,
                PixelFormat.TRANSLUCENT
        );

        ((Button) ((LinearLayout) this.layout.getChildAt(ROW_0)).getChildAt(OPEN_BUTTON)).setOnClickListener(v -> {
            Intent intent = new Intent(this, MainActivity.class);
            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
            startActivity(intent);
        });

        ((Button) ((LinearLayout) this.layout.getChildAt(ROW_0)).getChildAt(CLOSE_BUTTON)).setOnClickListener(v -> {
            this.stopSelf();
        });

        this.wm.addView(this.layout, this.layoutParams);
    }

    /**
     * Make the overlay movable / draggable.
     */
    @Override
    public boolean onTouch(View view, MotionEvent motionEvent) {
        switch (motionEvent.getAction()) {
            case MotionEvent.ACTION_DOWN:
                this.initialX = this.layoutParams.x;
                this.initialY = this.layoutParams.y;
                this.newX = (int) motionEvent.getRawX();
                this.newY = (int) motionEvent.getRawY();
                return true;
            case MotionEvent.ACTION_MOVE:
                this.layoutParams.x = this.initialX + (int) motionEvent.getRawX() - this.newX;
                this.layoutParams.y = this.initialY + (int) motionEvent.getRawY() - this.newY;
                this.wm.updateViewLayout(this.layout, this.layoutParams);
                return true;
            case MotionEvent.ACTION_UP:
                view.performClick();
                return true;
            default:
                return false;
        }
    }

    /**
     * View.performClick() will also trigger this event.
     */
    @Override
    public void onClick(View view) {
    }

    @Override
    public void onDestroy() {
        if (this.layout != null) {
            this.wm.removeView(this.layout);
        }
        super.onDestroy();
    }

}